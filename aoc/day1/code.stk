// Unzip [[a1, b1], [a2, b2], ...] into [[a1, a2, ...], [b1, b2, ...]]
{
    {
        .. $thisRight : $thisLeft :
        .. $restRight : $restLeft :
        []
            $restLeft  $thisLeft  append append
            $restRight $thisRight append append
    }
    [] [] append [] append
    fold
} $unzip2 :

// arr x $count #
// Count number of occurrences of `x` in `arr`
{
    $x :
    { $x = 0 1 ? } map sum
} $count :

$input
    // Read zipped data
    lines
    { wsplit { int } map } map

    // Unzip and order
    $unzip2 #
    ..
    sort $right :
    sort $left :

    // Part 1: Iterate in lockstep (by index) and calculate distance between each
    0 $right length 1 - range
    {
        $idx :
        $left $idx @
        $right $idx @
        - abs
    } map sum
    println

    // Part 2: Calculate similarity scores
    $left
    {
        $num :
        $right $num $count #
        $num *
    } map sum
    println
    