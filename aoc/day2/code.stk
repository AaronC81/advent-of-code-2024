// [arr] [pred] pairmatch?
// Whether `a b pred #` is true for each pair of items in `arr`
{
    $pred :
    $arr :
    0 $arr length 2 - range
    {
        $idx :
        $arr $idx @
        $arr $idx 1 + @
        $pred #
    }
    map
    all?
} $pairmatch? ::

// [arr] $safe?
// Whether the report, as exactly given, is "safe".
{
    $safeArr :

    $safeArr { < } pairmatch?
    $safeArr { > } pairmatch?
    |

    $safeArr { - abs dup 0 > swap 4 < & } pairmatch?
    &
} $safe? ::

// [arr] oneItemRemovedPermutations
{
    dup length 1 - 0 swap range
    { swap dup pull2 remove } map
} $oneItemRemovedPermutations ::

// [arr] $safeWithDampener?
// Whether the report, with up to one item removed, is "safe".
{
    // [original, index 0 removed, index 1 removed, index 2 removed, ...]
    dup oneItemRemovedPermutations swap append
    { safe? } map
    any?
} $safeWithDampener? ::


// Load list of reports
$input
lines
{ wsplit { int } map } map
$reports :

// Part 1
$reports
{ safe? } count
println

// Part 2
$reports
{ safeWithDampener? } count
println
